--------------------------------------------------------------------------------
addRecord

*** Assume the following variables are already defined. ***

- start: The pointer to the first record of the list (or NULL)
- uaccountno: The user's account number (integer)
- uname: a character array containing the user's name
- uaddress: a character array containing the user's address


struct record
{
    int               accountno;
    char              name[25];
    char              address[50];
    struct record*    next;
};

--------------------------------------------------------------------------------

define an int called i
defint an int called j
define an int called status
define a pointer to record called temp
define a pointer to record called current
copy from 1 to status
copy from 0 to i
copy from 0 to j


// if start == null, list empty create first thing and leave
if ( start is equal to NULL )
    allocate a heap space and store its address into start
    copy from uaccountno to accountno in the record whose address is in start
    copy from uname to name in the record whose address is in start
    copy from uaddress to address in the record whose address is in start
    copy from NULL to next in the record whose address is start
    copy from 0 to status

// else, start has address of record, at least list of 1+ things.
else if (status == 1)
    copy from start to current

//check for duplicate account number (if uaccountnumber is in the list, status = -1) 
    while ( current is not equal to NULL or status does not equal -1)
        if ( accountno in the record whose address is in current equals uaccountno)
            copy from -1 to status
        else
            copy from next in the record whose address is in current to current  

//not duplicate, item belongs in list but may be head
    if (status == 1)
        copy from start to current
        allocate a heap space and store its address in temp
        copy from uaccountno to accountno in the record whose address is in temp
        copy from uname to name in the record whose address is in temp
        copy from uaddress to address in the record whose address is in temp

//the record being added is the new head of the list
        if ( accountno in the record whose address is in temp is greater than the accountno whose address is in start)
            copy start to the next of the record whose address is in temp
            copy from temp to start
            copy from temp to current
            copy from 0 to status

//the account being added is somewhere else but is not new head
    while ( uaccountno is less than the accountno in the record whose address is in current AND status is equal to 1) *** or while some varibale is not something
        copy from next in the record whose address is in current to current
        copy from i + 1 to i
  
//found where it needs to go, now must slot it in
    if (status == 1)
        copy from current to the next of the record whose address is in temp
        copy from start to current

        while ( j does not equal i )
            if (j+1 == i)
                copy from from temp to next in the record whose address is in current    

            copy from j+1 to j
            copy from next in the record whose address is in current to current
        copy from 0 to status

return status    

*Size: 45 lines
